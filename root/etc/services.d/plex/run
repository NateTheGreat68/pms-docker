#!/usr/bin/with-contenv bash

if /usr/local/bin/home_persistent_mounted; then
  # Some git commands won't work without these.
  git config --global user.name "plex"
  git config --global user.email "no-reply@example.com"
  if [ -d "$HOME_PERSISTENT/.git" ]; then
    echo "Persistent config repo found; copying files to local installation."
  else
    echo "No repo found for the persistent config; creating."
    # Create the repo and make an initial commit.
    git -C "$HOME_PERSISTENT" init . &> /dev/null && \
        git -C "$HOME_PERSISTENT" add -A . &> /dev/null && \
        git -C "$HOME_PERSISTENT" commit --allow-empty -m "clean ${date}" &> /dev/null
    echo "Repo created; copying files to local installation."
  fi
  # Remove the dirty files from the repo.
  git -C "$HOME_PERSISTENT" reset --hard HEAD &> /dev/null && \
      git -C "$HOME_PERSISTENT" clean -fdx &> /dev/null
  # Copy the files.
  /usr/local/bin/sync_and_log "$HOME_PERSISTENT" "$HOME"
  # Start the sync service.
  echo "Files copied to local installation; starting sync service."
  s6-svc -u "$(ps aux | awk '{ if ( $2 == 1 ) print $NF }')/plex_sync"
fi

echo "Starting Plex Media Server."

export PLEX_MEDIA_SERVER_APPLICATION_SUPPORT_DIR="${PLEX_MEDIA_SERVER_APPLICATION_SUPPORT_DIR:-${HOME}/Library/Application Support}"
export PLEX_MEDIA_SERVER_HOME=/usr/lib/plexmediaserver
export PLEX_MEDIA_SERVER_MAX_PLUGIN_PROCS=6
export PLEX_MEDIA_SERVER_INFO_VENDOR=Docker
export PLEX_MEDIA_SERVER_INFO_DEVICE="Docker Container"
export PLEX_MEDIA_SERVER_INFO_MODEL=$(uname -m)
export PLEX_MEDIA_SERVER_INFO_PLATFORM_VERSION=$(uname -r)

if [ ! -d "${PLEX_MEDIA_SERVER_APPLICATION_SUPPORT_DIR}" ]; then
  /bin/mkdir -p "${PLEX_MEDIA_SERVER_APPLICATION_SUPPORT_DIR}"
  chown plex:plex "${PLEX_MEDIA_SERVER_APPLICATION_SUPPORT_DIR}"
fi

exec s6-setuidgid plex /bin/sh -c 'LD_LIBRARY_PATH=/usr/lib/plexmediaserver:/usr/lib/plexmediaserver/lib /usr/lib/plexmediaserver/Plex\ Media\ Server'
